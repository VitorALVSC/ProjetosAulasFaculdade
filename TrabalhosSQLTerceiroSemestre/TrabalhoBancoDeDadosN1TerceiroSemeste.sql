-- TRABALHO N1
--1. Implemente um banco de dados para um determinado segmento (clínica médica, oficina,vendas, etc.)

--a. Deverá conter no mínimo 6 tabelas; OK
--b. Deverá ter chaves primárias em todas as tabelas; OK
--c. Deverá ter entre 3 e 6 chaves estrangeiras; OK
--d. Deverá ter consultas utilizando INNER JOIN;
--e. Deverá ter consultas pesquisando por campos de textos e números;
--f. Deverá ter consulta utilizando o operador LIKE; >=; <=; <; >;
--g. Deverá ter consulta utilizando o SCRIPT para agrupar chamado GROUP BY;
--h. Deverá ter utilização de funções do Microsoft SQL Server.

CREATE DATABASE ClinicaBelaVita;

USE ClinicaBelaVita;



CREATE TABLE SEXO (
ID_SEXO SMALLINT PRIMARY KEY IDENTITY (1,1),
DESCRICAO_SEXO VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE USUARIOS (
ID_USUARIO INTEGER PRIMARY KEY IDENTITY(1,1),
NOME VARCHAR(150) NOT NULL,
DATA_NASCIMENTO DATE NOT NULL,
CPF VARCHAR(14) NOT NULL UNIQUE,
ID_SEXO SMALLINT CONSTRAINT FK_SEXO_USUARIOS FOREIGN KEY (ID_SEXO) REFERENCES SEXO(ID_SEXO) NOT NULL,
ENDERECO VARCHAR(100) NULL,
TELEFONE VARCHAR(25) NOT NULL,
EMAIL VARCHAR(50) NULL,
);

CREATE TABLE CLINICAS (
ID_CLINICA INTEGER PRIMARY KEY IDENTITY (1,1),
NOME VARCHAR(150) NOT NULL,
CNPJ VARCHAR(18) NOT NULL,
ENDERECO VARCHAR(100) NOT NULL,
TELEFONE VARCHAR(25) NOT NULL,
EMAIL VARCHAR(50) NOT NULL,
ID_USUARIO INTEGER CONSTRAINT FK_USUARIO_CLINICAS FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO) NOT NULL,
CRIADO DATETIME DEFAULT GETDATE() NOT NULL,
ATUALIZADO DATETIME NULL
);

CREATE TABLE PACIENTES (
ID_PACIENTE BIGINT PRIMARY KEY IDENTITY(1,1),
NOME VARCHAR(150) NOT NULL,
DATA_NASCIMENTO DATE NOT NULL,
CPF VARCHAR(14) NOT NULL UNIQUE,
ID_SEXO SMALLINT CONSTRAINT FK_SEXO_PACIENTE FOREIGN KEY (ID_SEXO) REFERENCES SEXO(ID_SEXO) NOT NULL,
ENDERECO VARCHAR(100) NULL,
TELEFONE VARCHAR(25) NOT NULL,
EMAIL VARCHAR(50) NULL,
ID_USUARIO INTEGER CONSTRAINT FK_USUARIO_PACIENTES FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO) NOT NULL,
CRIADO DATETIME DEFAULT GETDATE() NOT NULL,
ATUALIZADO DATETIME NULL
);

CREATE TABLE MEDICOS (
ID_MEDICO BIGINT PRIMARY KEY IDENTITY(1,1),
NOME VARCHAR(150) NOT NULL,
DATA_NASCIMENTO DATE NOT NULL,
CPF VARCHAR(14) NOT NULL UNIQUE,
ID_SEXO SMALLINT CONSTRAINT FK_SEXO_MEDICO FOREIGN KEY (ID_SEXO) REFERENCES SEXO(ID_SEXO) NOT NULL,
ESPECIALIDADE VARCHAR(50) NOT NULL,
ENDERECO_MEDICO VARCHAR(100) NULL,
ENDERECO_CLINICA VARCHAR(100) NULL,
TELEFONE_MEDICO VARCHAR(25) NOT NULL,
TELEFONE_CLINICA VARCHAR(25) NOT NULL,
EMAIL VARCHAR(50) NULL,
ID_USUARIO INTEGER CONSTRAINT FK_USUARIO_MEDICOS FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO) NOT NULL,
CRIADO DATETIME DEFAULT GETDATE() NOT NULL,
ATUALIZADO DATETIME NULL
);

CREATE TABLE CONSULTASMEDICAS (
ID_CONSULTA BIGINT PRIMARY KEY IDENTITY(1,1),
ID_CLINICA INTEGER CONSTRAINT FK_CLINICA_CONSULTAS FOREIGN KEY (ID_CLINICA) REFERENCES CLINICAS(ID_CLINICA) NOT NULL,
ID_PACIENTE BIGINT CONSTRAINT FK_PACIENTE_CONSULTAS FOREIGN KEY (ID_PACIENTE) REFERENCES PACIENTES(ID_PACIENTE) NOT NULL,
ID_MEDICO BIGINT CONSTRAINT FK_MEDICO_CONSULTAS FOREIGN KEY (ID_MEDICO) REFERENCES MEDICOS(ID_MEDICO) NOT NULL,
DATA_CONSULTA DATETIME NOT NULL,
CONSULTA_REALIZADA DATETIME NOT NULL,
DESCRICAO_CONSULTA VARCHAR (50) NOT NULL,
OBSERVACOES_CONSULTA VARCHAR (255) NULL,
DECLARACAO BIT NOT NULL DEFAULT 0,
ATESTADO BIT NOT NULL DEFAULT 0,
CRIADO DATETIME DEFAULT GETDATE() NOT NULL,
ATUALIZADO DATETIME NULL
);


CREATE TABLE PRESCRICOESRECEITAS(
ID_RECEITA BIGINT PRIMARY KEY IDENTITY(1,1),
ID_CONSULTA BIGINT CONSTRAINT FK_CONSULTA_RECEITA FOREIGN KEY (ID_CONSULTA) REFERENCES CONSULTASMEDICAS(ID_CONSULTA) NOT NULL,
TIPO_MEDICAMENTO VARCHAR(100) NOT NULL,
DOSAGEM VARCHAR(50) NOT NULL,
INSTRUCAO_USO VARCHAR(255) NOT NULL
);

CREATE TABLE EXAMESCONSULTAS (
ID_EXAME INTEGER PRIMARY KEY IDENTITY(1,1),
ID_PACIENTE BIGINT CONSTRAINT FK_PACIENTE_EXAMES FOREIGN KEY (ID_PACIENTE) REFERENCES PACIENTES(ID_PACIENTE) NOT NULL,
ID_CONSULTA BIGINT CONSTRAINT FK_CONSULTA_EXAMES FOREIGN KEY (ID_CONSULTA) REFERENCES CONSULTASMEDICAS(ID_CONSULTA) NOT NULL,
ID_CLINICA INTEGER CONSTRAINT FK_CLINICA_EXAMES FOREIGN KEY (ID_CLINICA) REFERENCES CLINICAS(ID_CLINICA) NOT NULL,
DATA_AGENDAMENTO DATETIME NOT NULL,
TIPO_EXAME VARCHAR (100)NOT NULL,
EXAME_REALIZADO DATETIME DEFAULT GETDATE() NOT NULL,
RESULTADO_EXAME VARCHAR(255) NOT NULL
);

CREATE TABLE TIPOS_PAGAMENTOS (
ID_TIPOPAGAMENTO INT PRIMARY KEY IDENTITY (1,1),
DESCRICAO_PAGAMENTO VARCHAR(100) NOT NULL
);

CREATE TABLE STATUS_PAGAMENTOS (
ID_STATUS SMALLINT PRIMARY KEY IDENTITY (1,1),
DESCRICAO_STATUS VARCHAR(10) NOT NULL UNIQUE
);

CREATE TABLE FATURAS (
ID_FATURA BIGINT PRIMARY KEY IDENTITY(1,1),
ID_CONSULTA BIGINT CONSTRAINT FK_CONSULTA_FATURAS FOREIGN KEY (ID_CONSULTA) REFERENCES CONSULTASMEDICAS(ID_CONSULTA) NOT NULL,
ID_TIPOPAGAMENTO INTEGER CONSTRAINT FK_PAGAMENTO_FATURAS FOREIGN KEY (ID_TIPOPAGAMENTO) REFERENCES TIPOS_PAGAMENTOS(ID_TIPOPAGAMENTO) NOT NULL,
VALOR_CONSULTA MONEY NOT NULL DEFAULT 0,
DATA_FATURA DATETIME DEFAULT GETDATE() NOT NULL,
ID_STATUS SMALLINT CONSTRAINT FK_STATUS_FATURAS FOREIGN KEY (ID_STATUS) REFERENCES STATUS_PAGAMENTOS(ID_STATUS) DEFAULT 1 NOT NULL,
ID_USUARIO INTEGER CONSTRAINT FK_USUARIO_FATURAS FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO) NOT NULL,
CRIADO DATETIME DEFAULT GETDATE() NOT NULL,
ATUALIZADO DATETIME NULL
);

/********************************************* INSERSSÃO DE DADOS NAS TABELAS ACIMA *************************************************/

--TABELA SEXO
INSERT INTO SEXO (DESCRICAO_SEXO) 
VALUES
('Masculino'),
('Feminino'),
('Outro'),
('Não binário'),
('Prefiro não informar');

SELECT * FROM SEXO;

--TABELA USUARIOS
INSERT INTO USUARIOS (NOME, DATA_NASCIMENTO, CPF, ID_SEXO, ENDERECO, TELEFONE, EMAIL) 
VALUES
('João Silva', '1980-05-12', '123.456.789-01', 1, 'Rua A, 123', '(11) 1234-5678', 'joao@email.com'),
('Maria Oliveira', '1975-08-21', '987.654.321-02', 2, 'Av. B, 456', '(22) 9876-5432', 'maria@email.com'),
('Carlos Souza', '1992-03-05', '456.789.123-03', 5, NULL, '(33) 4567-8901', 'carlos@email.com'),
('Ana Santos', '1988-12-30', '654.321.987-04', 2, 'Praça D, 321', '(44) 6543-2109', 'ana@email.com'),
('Fernanda Lima', '1970-09-18', '789.123.456-05', 3, 'Rua E, 567', '(55) 7890-1234', NULL);

SELECT * FROM USUARIOS;

--TABELA CLINICAS
INSERT INTO CLINICAS (NOME, CNPJ, ENDERECO, TELEFONE, EMAIL, ID_USUARIO) VALUES
('Clínica São Lucas', '12.345.678/9012-34', 'Rua X, 123', '(11) 1111-1111', 'clinicasl@email.com', 1),
('Clínica Santa Maria', '98.765.432/1098-76', 'Av. Y, 456', '(22) 2222-2222', 'clinicasm@email.com', 2),
('Clínica Nossa Senhora', '45.678.912/3045-67', 'Travessa Z, 789', '(33) 3333-3333', 'clinicanss@email.com', 3),
('Clínica Santa Casa', '65.432.198/7065-43', 'Praça W, 321', '(44) 4444-4444', 'clinicasanta@email.com', 4),
('Clínica Bela Vita', '78.912.345/6078-90', 'Rua V, 567', '(55) 5555-5555', 'clinicasj@email.com', 5);

SELECT * FROM CLINICAS;

--TABELA PACIENTES
INSERT INTO PACIENTES (NOME, DATA_NASCIMENTO, CPF, ID_SEXO, ENDERECO, TELEFONE, EMAIL, ID_USUARIO) 
VALUES
('Felipe Santos', '1990-03-15', '111.222.333-44', 1, 'Rua M, 321', '(11) 1111-2222', 'felipe@email.com', 1),
('Juliana Oliveira', '1985-11-20', '222.333.444-55', 2, 'Av. N, 654', '(22) 2222-3333', 'juliana@email.com', 2),
('Lucas Souza', '1978-08-10', '333.444.555-66', 1, 'Praça O, 987', '(33) 3333-4444', 'lucas@email.com', 3),
('Mariana Lima', '1980-04-03', '444.555.666-77', 2, 'Travessa P, 741', '(44) 4444-5555', 'mariana@email.com', 4),
('Gabriel Oliveira', '1995-01-20', '555.666.777-88', 1, 'Rua Q, 852', '(55) 5555-6666', 'gabriel@email.com', 5);

SELECT * FROM PACIENTES;

--TABELA MEDICOS
INSERT INTO MEDICOS (NOME, DATA_NASCIMENTO, CPF, ID_SEXO, ESPECIALIDADE, ENDERECO_MEDICO, ENDERECO_CLINICA, TELEFONE_MEDICO, TELEFONE_CLINICA, EMAIL, ID_USUARIO) 
VALUES
('Dr. Rafael', '1975-08-10', '123.456.789-01', 1, 'Cardiologia', NULL, 'Rua X, 123', '(11) 1111-2222', '(11) 1111-1111', 'rafael@email.com', 1),
('Dra. Beatriz', '1988-05-20', '987.654.321-02', 2, 'Pediatria', 'Av. Y, 789', 'Av. Y, 456', '(22) 2222-3333', '(22) 2222-2222', 'beatriz@email.com', 2),
('Dr. Luiz', '1980-12-15', '456.789.123-03', 1, 'Neurologia', 'Travessa M, 789', 'Travessa Z, 789', '(33) 3333-4444', '(33) 3333-3333', 'luiz@email.com', 3),
('Dra. Renata', '1992-04-05', '654.321.987-04', 2, 'Ginecologia', 'Rua N, 987', 'Praça W, 321', '(44) 4444-5555', '(44) 4444-4444', 'renata@email.com', 4),
('Dr. Gustavo', '1983-10-30', '789.123.456-05', 1, 'Ortopedia', '', 'Rua V, 567', '(55) 5555-6666', '(55) 5555-5555', 'gustavo@email.com', 5);

SELECT * FROM MEDICOS;

--TABELA CONSULTASMEDICAS
INSERT INTO CONSULTASMEDICAS (ID_CLINICA, ID_PACIENTE, ID_MEDICO, DATA_CONSULTA, CONSULTA_REALIZADA, DESCRICAO_CONSULTA, OBSERVACOES_CONSULTA, DECLARACAO, ATESTADO) 
VALUES
(1, 1, 1, '16-03-2024 10:00:00', '16-03-2024 10:30:00', 'Exame de rotina', 'Nenhuma observação', 1, 0),
(2, 2, 2, '17-03-2024 11:00:00', '17-03-2024 11:30:00', 'Consulta pediátrica', 'Prescrever vitamina D', 0, 0),
(3, 3, 3, '18-03-2024 12:00:00', '18-03-2024 12:30:00', 'Avaliação neurológica', 'Realizar exame de ressonância magnética', 0, 0),
(4, 4, 4, '19-03-2024 13:00:00', '19-03-2024 13:30:00', 'Consulta ginecológica', 'Receitar anticoncepcional', 1, 0),
(5, 5, 5, '20-03-2024 14:00:00', '20-03-2024 14:30:00', 'Avaliação ortopédica', 'Realizar radiografia do joelho', 0, 1);

SELECT * FROM CONSULTASMEDICAS;

--TABELA PRESCRICOESRECEITA
INSERT INTO PRESCRICOESRECEITAS (ID_CONSULTA, TIPO_MEDICAMENTO, DOSAGEM, INSTRUCAO_USO) 
VALUES
(3, 'Paracetamol', '500mg', 'Tomar 1 comprimido a cada 6 horas'),
(4, 'Vitamina D', '1000UI', 'Tomar 1 cápsula diariamente'),
(5, 'Dipirona', '30gts', 'Tomar de 12 em 12 horas durante 5 dias, após continuar se houver dor'),
(1, 'Anticoncepcional', '30mcg', 'Tomar 1 comprimido diariamente');

SELECT * FROM PRESCRICOESRECEITAS;

--TABELA EXAMESCONSULTA
INSERT INTO EXAMESCONSULTAS (ID_PACIENTE, ID_CONSULTA, ID_CLINICA, DATA_AGENDAMENTO, TIPO_EXAME, EXAME_REALIZADO, RESULTADO_EXAME) 
VALUES
(1, 3, 1, '16-03-2024 08:00:00', 'Exame de Sangue', '16-03-2024 08:30:00', 'Resultados normais'),
(2, 4, 2, '17-03-2024 09:00:00', 'Ecografia', '17-03-2024 09:30:00', 'Sem anomalias detectadas'),
(3, 5, 3, '18-03-2024 10:00:00', 'Ressonância Magnética', '18-03-2024 10:30:00', 'Agendar retorno para revisão'),
(4, 2, 4, '19-03-2024 11:00:00', 'Ultrassonografia', '19-03-2024 11:30:00', 'Sem alterações significativas'),
(5, 1, 5, '20-03-2024 12:00:00', 'Radiografia', '20-03-2024 12:30:00', 'Fratura no joelho esquerdo');

SELECT * FROM EXAMESCONSULTAS;

--TABELA TIPOS_PAGAMENTOS
INSERT INTO TIPOS_PAGAMENTOS (DESCRICAO_PAGAMENTO) VALUES
('Cartão de crédito'),
('Cartão de débito'),
('Dinheiro'),
('Transferência bancária'),
('Boleto bancário'),
('Pix');

SELECT * FROM TIPOS_PAGAMENTOS;

--TABELA STATUS_PAGAMENTOS
INSERT INTO STATUS_PAGAMENTOS (DESCRICAO_STATUS)
VALUES
('PENDENTE'),
('QUITADA');

SELECT * FROM STATUS_PAGAMENTOS;

--TABELA FATURAS 
INSERT INTO FATURAS (ID_CONSULTA, ID_TIPOPAGAMENTO, VALOR_CONSULTA, ID_USUARIO) VALUES
(3, 1, 100.00, 2),
(4, 2, 150.00, 2),
(5, 3, 200.00, 5),
(2, 4, 120.00, 3),
(1, 3, 180.00, 5);

SELECT * FROM FATURAS;

/****************************************************   SELECIONANDO AS TABELAS ACIMA  **************************************************************/
SELECT *FROM SEXO;
SELECT *FROM USUARIOS;
SELECT *FROM CLINICAS;
SELECT *FROM PACIENTES;
SELECT *FROM MEDICOS;
SELECT *FROM CONSULTASMEDICAS;
SELECT *FROM PRESCRICOESRECEITAS;
SELECT *FROM EXAMESCONSULTAS;
SELECT *FROM TIPOS_PAGAMENTOS;
SELECT *FROM STATUS_PAGAMENTOS;
SELECT *FROM FATURAS;

SELECT P.NOME AS NOME_PACIENTE, M.NOME AS NOME_MEDICO
FROM PACIENTES AS P
INNER JOIN CONSULTASMEDICAS AS C ON P.ID_PACIENTE = C.ID_PACIENTE
INNER JOIN MEDICOS AS M ON C.ID_MEDICO = M.ID_MEDICO;

SELECT F.VALOR_CONSULTA, F.DATA_FATURA AS DATAS_PAGAMENTO, 
DESCRICAO_STATUS AS STATUSPAGAMENTO, DESCRICAO_PAGAMENTO AS FORMAPAGAMENTO
FROM FATURAS AS F
INNER JOIN TIPOS_PAGAMENTOS AS TP ON F.ID_TIPOPAGAMENTO = TP.ID_TIPOPAGAMENTO
INNER JOIN STATUS_PAGAMENTOS AS SP ON F.ID_STATUS = SP.ID_STATUS;

SELECT CM.*
FROM CONSULTASMEDICAS AS CM
INNER JOIN FATURAS AS F ON CM.ID_CONSULTA = F.ID_CONSULTA
WHERE CM.DESCRICAO_CONSULTA LIKE '%Avaliação ortopédica%';

SELECT F.VALOR_CONSULTA, F.DATA_FATURA AS DATAS_PAGAMENTO, 
DESCRICAO_STATUS AS STATUSPAGAMENTO, DESCRICAO_PAGAMENTO AS FORMAPAGAMENTO
FROM FATURAS AS F
INNER JOIN TIPOS_PAGAMENTOS AS TP ON F.ID_TIPOPAGAMENTO = TP.ID_TIPOPAGAMENTO
INNER JOIN STATUS_PAGAMENTOS AS SP ON F.ID_STATUS = SP.ID_STATUS
WHERE F.VALOR_CONSULTA LIKE '%200%';

SELECT P.NOME AS NOME_PACIENTE,CM.*
FROM CONSULTASMEDICAS AS CM 
INNER JOIN FATURAS AS F ON CM.ID_CONSULTA = F.ID_CONSULTA 
INNER JOIN PACIENTES AS P ON CM.ID_PACIENTE=P.ID_PACIENTE
WHERE F.VALOR_CONSULTA > 150;

SELECT F.VALOR_CONSULTA, F.DATA_FATURA AS DATAS_PAGAMENTO, 
DESCRICAO_STATUS AS STATUSPAGAMENTO, DESCRICAO_PAGAMENTO AS FORMAPAGAMENTO
FROM FATURAS AS F
INNER JOIN TIPOS_PAGAMENTOS AS TP ON F.ID_TIPOPAGAMENTO = TP.ID_TIPOPAGAMENTO
INNER JOIN STATUS_PAGAMENTOS AS SP ON F.ID_STATUS = SP.ID_STATUS
WHERE F.VALOR_CONSULTA <= 130;

SELECT P.NOME AS NOME_PACIENTE,TP.DESCRICAO_PAGAMENTO AS TIPO_PAGAMENTO,CM.*,F.*
FROM CONSULTASMEDICAS AS CM
INNER JOIN FATURAS AS F ON CM.ID_CONSULTA = F.ID_CONSULTA
INNER JOIN PACIENTES AS P ON CM.ID_PACIENTE = P.ID_PACIENTE
INNER JOIN TIPOS_PAGAMENTOS AS TP ON F.ID_TIPOPAGAMENTO =TP.ID_TIPOPAGAMENTO
WHERE CM.DESCRICAO_CONSULTA LIKE '%Consulta pediátrica%'
AND F.VALOR_CONSULTA >= 100
AND F.VALOR_CONSULTA <= 200;

SELECT TP.DESCRICAO_PAGAMENTO AS TIPO_PAGAMENTO, COUNT(*) AS TOTAL_CONSULTAS
FROM FATURAS AS F
INNER JOIN TIPOS_PAGAMENTOS AS TP ON F.ID_TIPOPAGAMENTO = TP.ID_TIPOPAGAMENTO
GROUP BY TP.DESCRICAO_PAGAMENTO;

SELECT 
    CM.ID_CONSULTA,
    SUM(F.VALOR_CONSULTA) AS TOTAL_FATURADO,
    ROUND(SUM(F.VALOR_CONSULTA) * 1.1, 2) AS TOTAL_COM_IMPOSTO
FROM 
    CONSULTASMEDICAS AS CM
INNER JOIN 
    FATURAS AS F ON CM.ID_CONSULTA = F.ID_CONSULTA
GROUP BY 
    CM.ID_CONSULTA;